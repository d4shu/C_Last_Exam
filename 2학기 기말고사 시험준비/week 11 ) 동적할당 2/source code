/******************************************************************************
동적할당 실습 #2 - 구조체 배열 동적 생성하기
*******************************************************************************/
#include <stdio.h>
#include <stdlib.h> // 동적 메모리 할당 및 난수 생성을 위해 포함

// POINT 구조체 정의
typedef struct point {
    int x; // x 좌표
    int y; // y 좌표
} POINT;

int main()
{
    POINT* points; // 구조체 배열을 가리킬 포인터 선언
    int count;     // 동적 할당할 구조체 개수

    // 사용자로부터 구조체 배열 크기 입력
    scanf("%d", &count);

    // 동적 메모리 할당: POINT 크기 * count만큼 메모리 확보
    points = (POINT*)malloc(sizeof(POINT) * count);
    if (points == NULL) { // 메모리 할당 실패 확인
        printf("Memory allocation failed.\n");
        return -1;
    }

    // 구조체 배열 초기화: 난수로 x와 y 좌표 값 설정
    for (int i = 0; i < count; i++) {
        points[i].x = rand() % 100; // x 좌표는 0~99 사이 난수
        points[i].y = rand() % 100; // y 좌표도 0~99 사이 난수
    }

    // 초기화된 구조체 배열 출력
    for (int i = 0; i < count; i++) {
        printf("x - %d, y - %d\n", points[i].x, points[i].y);
    }

    // 동적 메모리 해제: 더 이상 사용하지 않을 때 메모리 반환
    free(points);

    return 0; // 프로그램 정상 종료
}
